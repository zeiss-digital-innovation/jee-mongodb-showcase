#!/bin/bash

# MongoDB Detection und Conditional Deployment Script
# Pr√ºft ob MongoDB bereits l√§uft und startet entsprechende docker-compose Konfiguration

echo "üîç Pr√ºfe ob MongoDB bereits l√§uft..."

# Pr√ºfe lokale MongoDB (Port 27017)
if nc -z localhost 27017 2>/dev/null; then
    echo "‚úÖ MongoDB l√§uft bereits auf localhost:27017"
    echo "üöÄ Starte Backend mit externer MongoDB..."

    # Setze Umgebungsvariable f√ºr externe MongoDB
    export MONGO_CONNECTION_STRING="mongodb://host.docker.internal:27017"

    # Starte nur Backend (ohne MongoDB Service)
    docker-compose -f docker-compose.external-mongo.yml up --build

elif docker ps --format "table {{.Names}}" | grep -q "mongodb"; then
    echo "‚úÖ MongoDB-Container l√§uft bereits"
    echo "üöÄ Starte Backend mit vorhandenem MongoDB-Container..."

    # Hole MongoDB Container IP
    MONGO_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' mongodb)
    export MONGO_CONNECTION_STRING="mongodb://$MONGO_IP:27017"

    # Starte nur Backend
    docker-compose -f docker-compose.external-mongo.yml up --build

else
    echo "‚ùå Keine MongoDB gefunden"
    echo "üöÄ Starte komplettes System (Backend + MongoDB)..."

    # Starte mit lokaler MongoDB
    docker-compose up --build
fi

echo ""
echo "Deployment abgeschlossen!"
echo "Backend ist verf√ºgbar unter: http://localhost:5000"
echo "MongoDB ist verf√ºgbar unter: mongodb://localhost:27017"
echo ""
echo "Um Logs zu sehen: docker-compose logs -f"
echo "Zum Stoppen: docker-compose down"
